/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   tests_main_06.test                                 :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: saaltone <saaltone@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/02/01 14:15:03 by saaltone          #+#    #+#             */
/*   Updated: 2022/03/04 13:55:45 by saaltone         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "tests_header.test"

int	main(void)
{
	printf("\nOctal with # flag (prefix 0 if it was not zero already):\n");
	printf_tester("%#o", 123);
	printf_tester("%#o", 0);

	printf("\nHexadecimal with # flag (prefixing a 0x / 0X):\n");
	printf_tester("%#x", 16777215);
	printf_tester("%#X", 16777215);
	printf_tester("%#x", 0);
	printf_tester("%#X", 0);

	printf("\nZero padding:\n");
	printf_tester("%03d", 42);
	printf_tester("%03d", 0);
	printf_tester("%03d", -42);
	printf_tester("%05d", -42);
	printf_tester("%03d", 1234);
	printf_tester("%03d", -1234);
	printf_tester("%00d", 1234);
	printf_tester("%00d", 0);

	printf("\nBoth, - and 0 flags. - should override 0:\n");
	printf_tester("%-010d%c", 1234, '|');
	printf_tester("%-010d%c", 0, '|');
	printf_tester("%-010d%c", -1234, '|');
	printf_tester("%0-10d%c", 1234, '|');
	printf_tester("%0-10d%c", 0, '|');
	printf_tester("%0-10d%c", -1234, '|');

	printf("\n- and 0 flags with width (3) less than digit count (4):\n");
	printf_tester("%-03d%c", 1234, '|');

	printf("\nBlank flag (A blank should be left before a positive number (or empty string)):\n");
	printf_tester("%c% d%c", '|', 42, '|');
	printf_tester("%c% d%c", '|', -42, '|');

	printf("\nBlank flag when width (5) is less than digit count (6):\n");
	printf_tester("%c% 5d%c", '|', 123456, '|');

	printf("\nBlank flag when width (7) is more than digit count (6):\n");
	printf_tester("%c% 7d%c", '|', 123456, '|');

	printf("\n+ flag. Adds sign before number:\n");
	printf_tester("%c%+d%c", '|', 42, '|');
	printf_tester("%c%+d%c", '|', -42, '|');
	printf_tester("%c%+d%c", '|', 0, '|');

	printf("\nOther flag combinations:\n", COLOR_RESET);
	printf_tester("%c%+7d%c", '|', 123456, '|');
	printf_tester("%c%+5d%c", '|', 123456, '|');
	printf_tester("%c%+++++5d%c", '|', 123456, '|');
	printf_tester("%c%      5d%c", '|', 123456, '|');
	printf_tester("%c% 02d%c", '|', 1, '|');

	printf("\nCombination with many different things:\n");
	printf_tester("%3c%2.2s%+1i%#3p%+ .2u%hhd%llu%o%#x%3%%10.10f%#- 02.9Ld", '%', "%", 1, NULL, 1, 1, 1, 10, 20, 1.f, 1.f);

	printf("\nJust %%:\n");
	printf_tester("%");

	return (0);
}
