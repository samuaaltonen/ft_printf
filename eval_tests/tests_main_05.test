/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   tests_main_05.test                                 :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: saaltone <saaltone@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/02/01 14:15:03 by saaltone          #+#    #+#             */
/*   Updated: 2022/03/04 16:25:47 by saaltone         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "tests_header.test"

int	main(void)
{
	printf("\nSigned integers with width and precisions:\n");
	printf_tester("%.0d", 0);
	printf_tester("%3.0d%c", 0, '|');
	printf_tester("%-3.0d%c", 0, '|');
	printf_tester("%.0u%c", 0, '|');
	printf_tester("%.0d", 123);
	printf_tester("%11.0d", 123);
	printf_tester("%11.11d", 123);
	printf_tester("%2.11d", 123);
	printf_tester("%3.3d", -1);
	printf_tester("%3.1d", 123);
	printf_tester("%.d", 42);
	printf_tester("%1.3d", -1);
	printf_tester("%10.3d", -1);
	printf_tester("%10.3d", 1);
	printf_tester("%+10.3d", 1);
	printf_tester("%+10.3d", 11);
	printf_tester("%+10.5d", 1122);
	printf_tester("%+-10.5d", 1122);
	printf_tester("%+010.5d", 1122);
	printf_tester("%+-010.5d%c", 1122, '|');
	printf_tester("%010d%c", 1122, '|');
	printf_tester("%010d%c", -2, '|');
	printf_tester("%-010d%c", 1122, '|');

	printf("\nUnsigned integers with width and precisions:\n");
	printf_tester("%.0u", 123);
	printf_tester("%11.0u", 123);
	printf_tester("%11.11u", 123);
	printf_tester("%3.3u", -1);
	printf_tester("%3.1u", 123);
	printf_tester("%.u", 42);
	printf_tester("%1.3u", 1);
	printf_tester("%10.3u", 1);
	printf_tester("%+10.3u", 1);
	printf_tester("%+010.5u", 1122);

	printf("\nFloats with width and precisions:\n");
	printf_tester("%f", 0.999999);
	printf_tester("%f", 0.9999999);
	printf_tester("%f", 0.99999949);
	printf_tester("%.0f", 123.123);
	printf_tester("%11.0f", 123.123);
	printf_tester("%11.11f", 123.123);
	printf_tester("%2.11f", 123.123);
	printf_tester("%3.3f", -1.1);
	printf_tester("%3.1f", 123.123);
	printf_tester("%.f", 42.42);
	printf_tester("%1.3f", -1.1);
	printf_tester("%10.3f", -1.1);
	printf_tester("%10.3f", 1.1);
	printf_tester("%+10.3f", 1.1);
	printf_tester("%+10.3f", 11.1);
	printf_tester("%+10.5f", 1122.2);
	printf_tester("%+-10.5f", 1122.2);
	printf_tester("%+010.5f", 1122.2);
	printf_tester("%+-010.5f%c", 1122.2, '|');
	printf_tester("%010f%c", 1122.2, '|');
	printf_tester("%010f%c", -2.1, '|');
	printf_tester("%-010f%c", 1122.2, '|');

	printf("\nFloat with precision prefixed with zeroes:\n");
	printf_tester("%1.03f", 123456.f);

	printf("\nSimple doubles:\n");
	printf_tester("%2.2lf", 123456.789123345678);
	printf_tester("%30.0lf", 123456.789123345678);

	printf("\nHexadecimal and octal:\n");
	printf_tester("%.10x", 16777215);
	printf_tester("%.10o", 123);

	printf("\nOctal with width and precision:\n");
	printf_tester("%12o%c", 16777215, '|');
	printf_tester("%2o%c", 16777215, '|');
	printf_tester("%-12o%c", 16777215, '|');
	printf_tester("%#o%c", 16777215, '|');
	printf_tester("%#12o%c", 16777215, '|');
	printf_tester("%#-12o%c", 16777215, '|');
	printf_tester("%#012o%c", 16777215, '|');
	printf_tester("%#12.10o%c", 0, '|');
	printf_tester("%#12.1o%c", 123, '|');
	printf_tester("%#12.30o%c", 16777215, '|');
	printf_tester("%#12.30o%c", 0, '|');
	printf_tester("%#o%c", 0, '|');

	printf("\nHexadecimal with width and precision:\n");
	printf_tester("%12X%c", 16777215, '|');
	printf_tester("%2X%c", 16777215, '|');
	printf_tester("%-12X%c", 16777215, '|');
	printf_tester("%#X%c", 16777215, '|');
	printf_tester("%#12X%c", 16777215, '|');
	printf_tester("%#-12X%c", 16777215, '|');
	printf_tester("%#012X%c", 16777215, '|');
	printf_tester("%#12.10X%c", 0, '|');
	printf_tester("%#12.1X%c", 123, '|');
	printf_tester("%#12.20X%c", 16777215, '|');
	printf_tester("%#12.20X%c", 0, '|');
	printf_tester("%#X%c", 0, '|');

	printf("\nOctal zero with zero precision:\n");
	printf_tester("%.0o%c", 0, '|');
	printf_tester("%3.0o%c", 0, '|');
	printf_tester("%.o%c", 0, '|');
	printf_tester("%#.o%c", 0, '|');

	printf("\nHexadecimal zero with zero precision:\n");
	printf_tester("%.0X%c", 0, '|');
	printf_tester("%3.0X%c", 0, '|');
	printf_tester("%.X%c", 0, '|');
	printf_tester("%#.X%c", 0, '|');

	printf("\nIntegers with other flags:\n");
	printf_tester("% 0.0d", 123);
	printf_tester("% +0.0d", 123);
	printf_tester("% 6.0d", 123);
	printf_tester("% 0.0d", -123);
	printf_tester("% 0.0u", 123);
	printf_tester("%015d", 1);
	printf_tester("% 03d", 1);
	printf_tester("% 03d", 0);
	printf_tester("%015u", 4294967295);
	printf_tester("% 10.5d", 4242);
	printf_tester("% 10.5u", 4242);
	return (0);
}
